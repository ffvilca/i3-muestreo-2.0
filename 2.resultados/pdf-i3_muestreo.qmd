---
title: "Interrogación 3"
subtitle: "EYP2417 - Muestreo"
format: 
  pdf: 
    include-in-header: 
      text: |
        \usepackage{amsmath}
        \usepackage{float}
    colorlinks: true
    geometry:
      - top=20mm
      - left=20mm
      - right=20mm
      - heightrounded
    fig-pos: "H"
author: 
  - name: "Camila Echeverría"
  - name: "Francisca Vilca"
crossref:
  fig-title: Figura
  fig-prefix: Figura
  tbl-title: Tabla
  tbl-prefix: Tabla
tbl-cap-location: bottom
---

```{r setup, include=FALSE}

library(survey)
library(tidyverse)
library(anesrake)
library(expss)
library(beepr)
library(here)
library(kableExtra)
```

```{r cache=TRUE, include=FALSE}
source(here("2.resultados/script-i3_muestreo.R"), local = knitr::knit_global())
```


# Análisis de la elección presidencial del año 2021

En el siguiente informe, se darán a conocer algunos resultados interesantes, con respecto a las elecciones presidenciales del año 2021, se analizará al votante de 1ra Vuelta con respecto a sus características como el Sexo, Edad y GSE, además se intentarán proyectar los resultados de 2da Vuelta, para ellos se usarán diferentes técnicas de muestreo y de balanceo para que los resultados sean lo más verosimiles a la realidad.

## Diseño Muestral

En este caso se realizará un muestreo de conglomerados en dos etapas, estratificadas por zona (considera solo viviendas urbanas – censo 2017). Primeramente, se obtiene una muestra aleatoria simple de manzanas al interior de cada estrato y de cada manzana se obtiene una muestra aleatoria de viviendas. Al interior de cada vivienda se selecciona un elector según la técnica del “cumpleaños”. No se realiza actualización del número de viviendas de la manzana seleccionada, de aquí son seleccionadas `r nrow(datos)` personas de un total de `r Pobla_Chile`.

## Probabilidades de Selección y Factores de Expansión según Zona, Sexo y cat-Edad de acuerdo al diseño Muestral

Por un lado si se usa la información del censo realizado el 2017, es posible obtener la información de las manzanas y las viviendas totales para calcular las probabilidades de selección, por otro lado, si se usan las estimaciones y proyecciones de la población que se tienen para el 2021, es posible conocer la cantidad de personas por sexo y edad que habrá en Chile y usando la tabla 1 de las referencias, se puede conocer los GSE que existen al 2021.

Con toda esta información se tiene que las probabilidades de selección y factores de Expansión serán:

```{r echo = FALSE}
#|tbl-cap: Probabilidades de Selección y Factores de Expansión según Zona, Sexo y cat-edad

tabla_datos1 <- cbind(muestra[,1:3],prob,fexp)

colnames(tabla_datos1) <- c("zona","sexo","cat.edad","Prob de Selección","Factores de Expansión")

knitr::kable(tabla_datos1, digits = 6, align = "c", format="latex") %>% 
  kable_styling( position="center")
```

## Cruce de votos 2da Vuelta vs 1ra Vuelta de la muestra sin ponderar

Para este caso, en general solo es de interés ver la redistribución de los votos tal y como es lo expresado por los ciudadanos de la muestra, los resultados pueden ser apreciados en la Tabla 2:

```{r echo = FALSE}
#|tbl-cap: Cruce de votos 2da Vuelta vs 1ra Vuelta de la muestra sin ponderar

tabla_datos2 <- cro_cpct(datos$P2v, datos$P1v)

tabla_datos2[is.na(tabla_datos2)] = 0

tabla_datos2 <- tabla_datos2[,2:11]

colnames(tabla_datos2) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco /Nulo","No sabe")
row.names(tabla_datos2) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")

knitr::kable(tabla_datos2, digits = 3, align = "c", format="latex") %>% 
  kable_styling(full_width=T, position="center")
```

## Cruce de votos 2da Vuelta vs 1ra Vuelta de la muestra con ponderación

En la misma línea del item anterior, ahora se hará el cruce de votos pero haciendo una ponderación según la zona en la que habita la persona, y es homnre o mujer y en qué categoría se encuentra según su edad. Para poder lograr esto, debemos calcular las probabilidades de selección para cada uno de estos casos, y así podremos obtener los factores de expansión $w_{ij}$, cuyo procedimiento y detalle podemos encontrar en el script. Así, la distribución de los votos es la siguiente:

```{r echo =FALSE}
#|tbl-cap: Cruce de votos 2da Vuelta vs 1ra Vuelta de la muestra con ponderación

tabla_datos3 <- cro_cpct(datos$P2v, datos$P1v, weight = datos$pesos)

tabla_datos3[is.na(tabla_datos3)] = 0

tabla_datos3 <- tabla_datos3[,2:11]

colnames(tabla_datos3) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco \n /Nulo","No sabe")
row.names(tabla_datos3) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")

knitr::kable(as.matrix(tabla_datos3), digits = 3, align = "c" , format="latex") %>% 
  kable_styling(full_width=T, position="center")
```

Con los cruces de votos de ambas tablas es posible observar algunas tendencias, en general no mayor cambio por los votantes que en primera instancia fueron por Boric o por Kast, si es importante notar que la mayoría de los ciudadanos que originalmente votaron por Provoste, Ártes o MEO, fueron van a ir para Boric en 2da vuelta, lo cual tiene mucho sentido por los discursos póliticos de los personajes. Sin embargo, el personaje importante en este caso es Parisi, ya que al ser el 3re candidato con más voto puede complicar la situación de quien puede salir electo. Según la muestra, con ponderación o sin ella prácticamente el 50% de los votos que recibió Parisi van a ir para el candidato Boric. Todo este análisis podría verse opacado por la gran masa de quienes no votaron en general se distribuye equitativamente entre los 2 candidatos o no saber por quien votar.

## Cruce de votos 2da Vuelta vs 1ra Vuelta de la muestra con g-weights

```{r echo = FALSE}
#|tbl-cap: Cruce de votos 2da Vuelta vs 1ra Vuelta de la muestra con g-weights
tabla_datos4 <- cro_cpct(datos$P2v, datos$P1v, weight = datos$g)

tabla_datos4[is.na(tabla_datos4)] = 0

tabla_datos4 <- tabla_datos4[,2:11]

colnames(tabla_datos4) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco \n /Nulo","No sabe")
row.names(tabla_datos4) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")

knitr::kable(tabla_datos4, digits = 3, align = "c", format="latex") %>% 
  kable_styling(full_width=T, position="center")
```

igual que en el caso anterior los votos de parisi se van en su mayoría para Boric, mencionar que las tendencias no varían mucho

## Cruce de votos 2da Vuelta vs 1ra Vuelta usando raking según Zona, Sexo, cat.edad y GSE

```{r, echo =FALSE}
#|tbl-cap: Cruce de votos 2da Vuelta vs 1ra Vuelta usando raking según Zona, Sexo, cat.edad y GSE
tabla_datos5 <- cro_cpct(datos_c$P2v,list(datos_c$P1v ,total()), weight=datos_c$pond)

tabla_datos5 <- tabla_datos5[,2:11]

tabla_datos5[is.na(tabla_datos5)] = 0

colnames(tabla_datos5) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco \n /Nulo","No sabe")
row.names(tabla_datos5) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")

knitr::kable(tabla_datos5, digits = 3, align = "c", format="latex") %>% 
  kable_styling(full_width=T, position="center")
```

## Cruce de votos 2da Vuelta vs 1ra Vuelta usando raking según Zona, Sexo, cat.edad y voto en 1ra vuelta

```{r echo =FALSE}

tabla_datos6 <- cro_cpct(datos_d$P2v,list(datos_d$P1v ,total()), weight=datos_d$pond)

tabla_datos6 <- tabla_datos6[,2:11]

tabla_datos6[is.na(tabla_datos6)] = 0

colnames(tabla_datos6) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco \n /Nulo","No sabe")
row.names(tabla_datos6) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")

knitr::kable(tabla_datos6, digits = 3, align = "c", format="latex") %>% 
  kable_styling(full_width=T, position="center") 
```

## Predicciones para el Total Poblacional

Justificar porque es bueno y que se perdería al hacer esto

Ver como se lean las tablas weonas y se vea bonito 

### Ponderador de a)
```{r echo =FALSE}
pob.chile <- 15200840

tabla <- datos %>% 
  mutate(fexp = pesos/sum(pesos)*pob.chile)


tabla_datos7 <- cro(tabla$P2v, tabla$P1v, weight = tabla$fexp)

tabla_datos7 <- tabla_datos7[1:5,2:11]

tabla_datos7[is.na(tabla_datos7)] = 0

tabla_datos7 <- rbind(tabla_datos7 ,colSums(tabla_datos7))

colnames(tabla_datos7) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco \n /Nulo","No sabe")
row.names(tabla_datos7) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")

knitr::kable(tabla_datos7, digits = 0, align = "c", format="latex") %>% 
  kable_styling(full_width=T, position="center") 
```


### Ponderador de b)

```{r echo =FALSE, eval=FALSE}
tablab <- datos %>% 
  mutate(fexp = g/sum(g)*pob.chile)

tabla_datos8 <- cro(tablab$P2v, tablab$P1v, weight = tablab$fexp)

tabla_datos8 <- tabla_datos8[1:5,2:11]

tabla_datos8[is.na(tabla_datos8)] = 0

tabla_datos8 <- rbind(tabla_datos8 ,colSums(tabla_datos8)

colnames(tabla_datos8) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco \n /Nulo","No sabe")
row.names(tabla_datos8) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")

knitr::kable(tabla_datos8, digits = 0, align = "c", format="latex") %>% 
  kable_styling(full_width=T, position="center") 
```


### Ponderador de c)

```{r echo =FALSE}
tablac <- datos_c %>% 
  mutate(fexp = pond/sum(pond)*pob.chile)

tabla_datos9 <- cro(tablac$P2v, tablac$P1v, weight = tablac$fexp)

tabla_datos9 <- tabla_datos9[1:5,2:11]

tabla_datos9[is.na(tabla_datos9)] = 0

tabla_datos9 <- rbind(tabla_datos9 ,colSums(tabla_datos9))

colnames(tabla_datos9) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco \n /Nulo","No sabe")
row.names(tabla_datos9) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")

knitr::kable(tabla_datos9, digits = 0, align = "c", format="latex") %>% 
  kable_styling(full_width=T, position="center") 
```

### Ponderador de d)

```{r echo =FALSE}
tablad <- datos_d %>% 
  mutate(fexp =  pond/sum(pond)*pob.chile)

tabla_datos10 <- cro(tablad$P2v, tablad$P1v, weight = tablad$fexp)

tabla_datos10 <- tabla_datos10[1:5,2:11]

tabla_datos10[is.na(tabla_datos10)] = 0

tabla_datos10 <- rbind(tabla_datos10 ,colSums(tabla_datos10))

colnames(tabla_datos10) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco \n /Nulo","No sabe")
row.names(tabla_datos10) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe", "Total")

knitr::kable(tabla_datos10, digits = 0, align = "c", format="latex") %>% 
  kable_styling(full_width=T, position="center") 
```


```{r include=FALSE}
beep()
```

