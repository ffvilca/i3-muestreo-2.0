---
title: "Interrogación 3"
subtitle: "EYP2417 - Muestreo"
format: 
  pdf: 
    include-in-header: 
      text: |
        \usepackage{amsmath}
        \usepackage{float}
    colorlinks: true
    geometry:
      - top=20mm
      - left=20mm
      - right=20mm
      - heightrounded
    fig-pos: "H"
author: 
  - name: "Camila Echeverría"
  - name: "Francisca Vilca"
crossref:
  fig-title: Figura
  fig-prefix: Figura
  tbl-title: Tabla
  tbl-prefix: Tabla
tbl-cap-location: bottom
---

```{r setup, include=FALSE}

library(survey)
library(tidyverse)
library(anesrake)
library(expss)
library(beepr)
library(here)
library(kableExtra)
```

```{r cache=TRUE, include=FALSE}
source(here("2.resultados/script-i3_muestreo.R"), local = knitr::knit_global())
```


# Análisis de la elección presidencial del año 2021

En el siguiente informe, se darán a conocer algunos resultados interesantes, con respecto a las elecciones presidenciales del año 2021, se analizará al votante de 1ra Vuelta con respecto a sus características como el Sexo, Edad y GSE, además se intentarán proyectar los resultados de 2da Vuelta, para ellos se usarán diferentes técnicas de muestreo y de balanceo para que los resultados sean lo más verosimiles a la realidad.

## Diseño Muestral

En este caso se realizará un muestreo de conglomerados en dos etapas, estratificadas por zona (considera solo viviendas urbanas – censo 2017). Primeramente, se obtiene una muestra aleatoria simple de manzanas al interior de cada estrato y de cada manzana se obtiene una muestra aleatoria de viviendas. Al interior de cada vivienda se selecciona un elector según la técnica del “cumpleaños”. No se realiza actualización del número de viviendas de la manzana seleccionada, de aquí son seleccionadas `r nrow(datos)` personas de un total de `r Pobla_Chile`.

## Probabilidades de Selección y Factores de Expansión según Zona, Sexo y cat-Edad de acuerdo al diseño Muestral

Por un lado si se usa la información del censo realizado el 2017, es posible obtener la información de las manzanas y las viviendas totales para calcular las probabilidades de selección. Por otro lado, si se usan las estimaciones y proyecciones de la población que se tienen para el 2021, es posible conocer la cantidad de personas por sexo y edad que habrá en Chile y usando la primera tabla de las referencias, se puede conocer los GSE que existen al 2021.

Con toda esta información se tiene que las probabilidades de selección y factores de Expansión serán:

```{r echo = FALSE}


tabla_datos1 <- cbind(muestra[,1:3],prob,fexp)

colnames(tabla_datos1) <- c("zona","sexo","cat.edad","Prob de Selección","Factores de Expansión")

knitr::kable(tabla_datos1, digits = 6, align = "c", format="latex") %>% 
  kable_styling( position="center")
```

## Cruce de votos 2da Vuelta vs 1ra Vuelta de la muestra sin ponderar

Para este caso, sólo es de interés ver la redistribución de los votos tal y como es lo expresado por los ciudadanos de la muestra. Los resultados pueden ser apreciados en la siguiente tabla:

```{r echo = FALSE}



tabla_datos2 <- cro_cpct(datos$P2v, datos$P1v)

tabla_datos2[is.na(tabla_datos2)] = 0

tabla_datos2 <- tabla_datos2[,2:11]

colnames(tabla_datos2) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco /Nulo","No sabe")
row.names(tabla_datos2) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")

knitr::kable(tabla_datos2, digits = 3, align = "c", format="latex") %>% 
  kable_styling(full_width=T, position="center")
```

## Cruce de votos 2da Vuelta vs 1ra Vuelta de la muestra con ponderación

En la misma línea del ítem anterior, ahora se hará el cruce de votos pero haciendo una ponderación según la zona en la que habita la persona, si es homnre o mujer y en qué categoría se encuentra según su edad. Para poder lograr esto, debemos calcular las probabilidades de selección para cada uno de estos casos, y así podremos obtener los factores de expansión $w_{ij}$, cuyo procedimiento y detalle podemos encontrar en el script. De esta manera, la distribución de los votos es la apreciada en la siguiente tabla:

```{r echo =FALSE}


tabla_datos3 <- cro_cpct(datos$P2v, datos$P1v, weight = datos$pesos)

tabla_datos3[is.na(tabla_datos3)] = 0

tabla_datos3 <- tabla_datos3[,2:11]

colnames(tabla_datos3) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco \n /Nulo","No sabe")
row.names(tabla_datos3) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")

knitr::kable(as.matrix(tabla_datos3), digits = 3, align = "c" , format="latex") %>% 
  kable_styling(full_width=T, position="center")
```

Con los cruces de votos de ambas tablas, es posible observar algunas tendencias. Por ejemplo, para las personas que votaron por Boric o por Kast se mantuvieron relativamente constantes en primera y segunda vuelta, mientras que las personas que se inclinaron por Provoste, Ártes o MEO en primera vuelta decidieron ir por Boric en la segunda instancia, lo cual tiene mucho sentido al ver los discursos políticos de estos candidatos. Sin embargo, uno de los personajes más destacados fue Parisi, ya que al ser el tercer candidato con más votos, la inclinación que tomen sus simpatizantes resultará clave para determinar a un ganador. Los resultados de nuestra muestra, con ponderación y sin ella, indican que prácticamente el 50% de los votantes de Parisi apoyarían a Boric, aunque este análisis podría verse opacado por la gran masa de quienes no votaron, cuya distribución es en general equitativa entre los dos candidatos.

## Cruce de votos 2da Vuelta vs 1ra Vuelta de la muestra con g-weights

Una de las particularidades que tiene el método de g-weights, es que calcula los pesos de una manera que resulta proporcional entre la población muestreada y la población total. Luego de realizar este procedimiento para las categorías solicitadas, notemos que, de manera muy similar al caso anterior, la siguiente tabla nos muestra que la mitad de los votantes de Parisi votarían por Boric en la segunda vuelta. Por otro lado, resulta interesante recalcar que quienes no sabían por quién votar en la primera vuelta, en general tampoco saben para esta segunda vuelta. Algo similar ocurre con la gente que votó nulo o blanco, pues la mayoría de esas personas tampoco sabe por quién votar. Las tendencias antes mencionadas no presentan mayores cambios en este caso.

```{r echo = FALSE}


tabla_datos4 <- cro_cpct(datos$P2v, datos$P1v, weight = datos$g)

tabla_datos4[is.na(tabla_datos4)] = 0

tabla_datos4 <- tabla_datos4[,2:11]

colnames(tabla_datos4) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco \n /Nulo","No sabe")
row.names(tabla_datos4) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")

knitr::kable(tabla_datos4, digits = 3, align = "c", format="latex") %>% 
  kable_styling(full_width=T, position="center")
```


## Cruce de votos 2da Vuelta vs 1ra Vuelta usando raking según Zona, Sexo, cat.edad y GSE

En general es común encontrar diferencias entre la población y la muestra que se selecciona, esto se debe principalmente a las varaibles demográficas, por lo que una vez que se tiene seleccionada la muestra es bueno, que antes de hacer las estimaciones hacer un ajuste en las diferencias usando ponderaciones para que los totales marginales concurden, en este caso se usará el método de raking, ya que se sabe que es más flexible cuando se usa más de una variable, que en este caso serán Zona, Sexo, cat.edad y GSE, de esta manera quedará mejor calibrado y mejorará la eficiencia de nuestras estimaciones. Lo cual se puede observar en la Tabla 5, donde se puede notar que el porcentaje de los votos de Boric y Kast aumentaron en aquellos votantes que desde la primera vuelta estaban decididos por aquel candidato. Por otro lado y punto clave de ánalisis, al agregar el análisis con raking, es claro notar que los votos que originalmente eran Parisi, disminuyeron en la segunda vuelta al dar el apoyo a Boric y se sumó al grupo de no saber por quien votar. Esto resulta interesante, ya que eso es de ayuda para ambos candidatos para saber a que público dirigir su discurso con el fin de conseguir los sufragios de aquellos ciudanos.

```{r, echo =FALSE}


tabla_datos5 <- cro_cpct(datos_c$P2v,list(datos_c$P1v ,total()), weight=datos_c$pond)

tabla_datos5 <- tabla_datos5[,2:11]

tabla_datos5[is.na(tabla_datos5)] = 0

colnames(tabla_datos5) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco \n /Nulo","No sabe")
row.names(tabla_datos5) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")

knitr::kable(tabla_datos5, digits = 3, align = "c", format="latex") %>% 
  kable_styling(full_width=T, position="center")
```


## Cruce de votos 2da Vuelta vs 1ra Vuelta usando raking según Zona, Sexo, cat.edad y voto en 1ra vuelta

Para este último caso, a diferencia del anterior, se le da importancia al ciudadano que no sabe por quien votar o que simplemente no vota, por lo que en la Tabla 6, al hacer el raking con estas nuevas variables, es posible notar, nuevamente que el cambio significativo no esta en los candidatos si no en los porcentajes de quienes no votaron, donde se ve que se mantiene la tendecia de que en porcentajes exista una alta cantidad que no vote ni en primera ni en segunda vuelta. Por lo que los candidatos, en general tienen que ser capaces de captar a ese ciudadano a través de sus propuestas para que poder declararse ganador de la elección presidencial. Esta tendencia en general no cambia la dinamica que se traía de los otros análisis solo le da mayor fuerza y validez a las ideas originales.

```{r echo =FALSE}


tabla_datos6 <- cro_cpct(datos_d$P2v,list(datos_d$P1v ,total()), weight=datos_d$pond)

tabla_datos6 <- tabla_datos6[,2:11]

tabla_datos6[is.na(tabla_datos6)] = 0

colnames(tabla_datos6) <- c("Boric", "Kast", "Provoste","Sichel", "Ártes", "Enriquez", "Parisi", "No vote", "Blanco \n /Nulo","No sabe")
row.names(tabla_datos6) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")

knitr::kable(tabla_datos6, digits = 3, align = "c", format="latex") %>% 
  kable_styling(full_width=T, position="center") 
```

## Predicciones para el Total Poblacional

En general, podemos ver que para todos los ponderadores el caso es similar: 

$$ \text{Boric sale elegido como nuevo presidente.}$$

Sin embargo, algunas de las diferencias que se pueden apreciar en cada uno de los casos se dan por la metodología utilizada. Por ejemplo, el panorama que se veía más estrecho en cuanto al resultado es el de la d), sobre todo porque toma en cuenta la abstención al momento de hacer el cálculo de los pesos y posteriores predicciones. En cambio, una situación contraria se puede observar en el caso del ponderador de b), donde la diferencia es notoria. Como en este caso se calculan los pesos en base a las proporciones muestrales versus las reales, sin considerar la abstención, muestra más o menos qué ocurriría si todas estas personas concurrieran a votar.

### Ponderador de a)
```{r echo =FALSE}


pob.chile <- 15200840

tabla <- datos %>% 
  mutate(fexp = pesos/sum(pesos)*pob.chile)

tabla_datos7 <- cro(tabla$P2v, tabla$P1v, weight = tabla$fexp)

tabla_datos7 <- tabla_datos7[1:5,2:11]

tabla_datos7[is.na(tabla_datos7)] = 0

tabla_datos7 <- cbind(tabla_datos7 ,rowSums(tabla_datos7))

tabla_datos7 <- tabla_datos7[,11]

tabla_datos7 <- matrix(c(tabla_datos7,sum(tabla_datos7)),ncol=1)

tabla_datos7 <- cbind(trunc(tabla_datos7),round(tabla_datos7[,1]/pob.chile*100,2))

row.names(tabla_datos7) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")
colnames(tabla_datos7) <- c("Cantidad de Votos", "Porcentaje")

knitr::kable(tabla_datos7, align = "c", format="latex") %>% 
  kable_styling(full_width=F, position="center", latex_options = "HOLD_position")
```


### Ponderador de b)

```{r echo =FALSE}


real <- poblacion$Pob_grupo/sum(poblacion$Pob_grupo)
observado.p <- muestra.p$w/sum(muestra.p$w)

pesos.n <- real/observado.p

datos <- datos %>% mutate(g = NA)
for(i in 1:32){
  datos$g[which(datos$zona == muestra.p$zona[i] & 
                      datos$sexo == muestra.p$sexo[i] &
                      datos$cat.edad == muestra.p$cat.edad[i])] <- pesos.n[i]
}

tablab <- datos %>% 
  mutate(fexp = g/sum(g)*pob.chile)

tabla_datos8 <- cro(tablab$P2v, tablab$P1v, weight = tablab$fexp)

tabla_datos8 <- tabla_datos8[1:5,2:11]

tabla_datos8[is.na(tabla_datos8)] <- 0

tabla_datos8 <- cbind(tabla_datos8 ,rowSums(tabla_datos8))

tabla_datos8 <- tabla_datos8[,11]

tabla_datos8 <- matrix(c(tabla_datos8,sum(tabla_datos8)),ncol=1)

tabla_datos8 <- cbind(trunc(tabla_datos8),round(tabla_datos8[,1]/pob.chile*100,2))

row.names(tabla_datos8) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")
colnames(tabla_datos8) <- c("Cantidad de Votos", "Porcentaje")

knitr::kable(tabla_datos8, align = "c", format="latex") %>% 
  kable_styling(full_width=F, position="center", latex_options = "HOLD_position") 
```


### Ponderador de c)

```{r echo =FALSE}


tablac <- datos_c %>% 
  mutate(fexp = pond/sum(pond)*pob.chile)

tabla_datos9 <- cro(tablac$P2v, tablac$P1v, weight = tablac$fexp)

tabla_datos9 <- tabla_datos9[1:5,2:11]

tabla_datos9[is.na(tabla_datos9)] = 0

tabla_datos9 <- cbind(tabla_datos9 ,rowSums(tabla_datos9))

tabla_datos9 <- tabla_datos9[,11]

tabla_datos9 <- matrix(c(tabla_datos9,sum(tabla_datos9)),ncol=1)

tabla_datos9 <- cbind(trunc(tabla_datos9),round(tabla_datos9[,1]/pob.chile*100,2))

row.names(tabla_datos9) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")
colnames(tabla_datos9) <- c("Cantidad de Votos", "Porcentaje")

knitr::kable(tabla_datos9, align = "c", format="latex") %>% 
  kable_styling(full_width=F, position="center", latex_options = "HOLD_position") 
```

### Ponderador de d)

```{r echo =FALSE}


tablad <- datos_d %>% 
  mutate(fexp =  pond/sum(pond)*pob.chile)

tabla_datos10 <- cro(tablad$P2v, tablad$P1v, weight = tablad$fexp)

tabla_datos10 <- tabla_datos10[1:5,2:11]

tabla_datos10[is.na(tabla_datos10)] = 0

tabla_datos10 <- cbind(tabla_datos10 ,rowSums(tabla_datos10))

tabla_datos10 <- tabla_datos10[,11]

tabla_datos10 <- matrix(c(tabla_datos10,sum(tabla_datos10)),ncol=1)

tabla_datos10 <- cbind(trunc(tabla_datos10),round(tabla_datos10[,1]/pob.chile*100,2))

row.names(tabla_datos10) <- c("Boric", "Kast","Nulo", "No Votaré","No sabe","Total")
colnames(tabla_datos10) <- c("Cantidad de Votos", "Porcentaje")

knitr::kable(tabla_datos10, align = "c", format="latex") %>% 
  kable_styling(full_width=F, position="center", latex_options = "HOLD_position") 
```

Finalmente, para cerrar todo este análisis exhaustivo sobre las elecciones presidenciales, es posible concluir que para poder obtener buenos resultados y/o estimaciones que en este caso nos permitan conocer quién podría ser el próximo presidente de la República de Chile, el muestreo juega un rol clave, ya que si no se es consciente de las características de la población o no se utilizan correctamente los supuestos, se obtienen malos resultados y por ello puede que algún candidato se vea perjudicado, lo que afectaría al funcionamiento de la Democracia que, según diversos historiadores, sólo funcionará cuando todos tengan la misma información.

```{r include=FALSE}
beep()
```

